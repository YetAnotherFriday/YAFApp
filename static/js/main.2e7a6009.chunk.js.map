{"version":3,"sources":["components/dashboard/dashboard.module.css","components/header/header.module.css","components/dashboard/selection.module.css","components/dashboard/dashboard.tsx","components/dashboard/selection.tsx","components/dashboard/index.tsx","components/header/header.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","DashboardBody","isSignedIn","className","style","dashboardWrapper","tickerTimeChart","useStyles","makeStyles","theme","formControl","margin","spacing","minWidth","selectEmpty","marginTop","Selection","props","React","useState","Date","selectedDate","setSelectedDate","ticker","setTicker","handleDateChange","date","selectionWrapper","FormControl","InputLabel","id","Select","labelId","value","onChange","event","target","MenuItem","utils","DateFnsUtils","disableToolbar","variant","format","label","KeyboardButtonProps","Dashboard","Header","header","headerWrapper","headerList","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oFACAA,EAAOC,QAAU,CAAC,iBAAmB,oCAAoC,gBAAkB,qC,mBCA3FD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,cAAgB,8BAA8B,WAAa,6B,mBCA7GD,EAAOC,QAAU,CAAC,iBAAmB,sC,4JCOxBC,EAA0C,SAAC,GAAmB,EAAjBC,WACxD,OACE,sBAAKC,UAAWC,IAAMC,iBAAtB,UACE,qBAAKF,UAAWC,IAAME,kBAGtB,qBAAKH,UAAWC,IAAME,kBAGtB,qBAAKH,UAAWC,IAAME,sB,+FCItBC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,YAAa,CACXC,OAAQF,EAAMG,QAAQ,GACtBC,SAAU,KAEZC,YAAa,CACXC,UAAWN,EAAMG,QAAQ,QAIhBI,EAAsC,SAACC,GAAW,IAAD,EACpBC,IAAMC,SAAS,IAAIC,KAAK,wBADJ,mBACrDC,EADqD,KACvCC,EADuC,OAEhCJ,IAAMC,SAAS,IAFiB,mBAErDI,EAFqD,KAE7CC,EAF6C,KAItDC,EAAmB,SAACC,GACxBJ,EAAgBI,IAMlB,OACE,sBAAKvB,UAAWC,IAAMuB,iBAAtB,UAEE,eAACC,EAAA,EAAD,CAAazB,UAAWI,IAAYG,YAApC,UACE,cAACmB,EAAA,EAAD,CAAYC,GAAG,oBAAf,oBACA,eAACC,EAAA,EAAD,CAEEC,QAAQ,oBACRF,GAAG,eACHG,MAAOV,EACPW,SAba,SAACC,GACpBX,EAAUW,EAAMC,OAAOH,QAOnB,UAOE,cAACI,EAAA,EAAD,CAAUJ,MAAO,EAAjB,qBACA,cAACI,EAAA,EAAD,CAAUJ,MAAO,EAAjB,qBACA,cAACI,EAAA,EAAD,CAAUJ,MAAO,EAAjB,2BAGJ,cAAC,IAAD,CAAyBK,MAAOC,IAAhC,SACE,cAAC,IAAD,CACEC,gBAAc,EACdC,QAAQ,SACRC,OAAO,aACP/B,OAAO,SACPmB,GAAG,qBACHa,MAAM,YACNV,MAAOZ,EACPa,SAAUT,EACVmB,oBAAqB,CACnB,aAAc,mBAIpB,cAAC,IAAD,CAAyBN,MAAOC,IAAhC,SAEE,cAAC,IAAD,CACEC,gBAAc,EACdC,QAAQ,SACRC,OAAO,aACP/B,OAAO,SACPmB,GAAG,qBACHa,MAAM,UACNV,MAAOZ,EACPa,SAAUT,EACVmB,oBAAqB,CACnB,aAAc,uBCjFbC,EAAsC,SAAC5B,GAClD,OACE,qCACE,cAAC,EAAD,IACA,cAAE,EAAF,CAAgBf,YAAU,Q,iBCDnB4C,EAAgC,SAAC,GAAoB,IAAlB5C,EAAiB,EAAjBA,WAC9C,OACE,wBAAQC,UAAWC,IAAM2C,OAAzB,SACE,sBAAK5C,UAAWC,IAAM4C,cAAtB,UACE,qBAAK7C,UAAU,cAAf,kBACA,8BACE,qBAAIA,UAAWC,IAAM6C,WAArB,UACE,wCACA,wCACA,6CAGJ,8BAAM/C,EAAa,WAAa,kBCLzBgD,MAVf,WACE,OACE,sBAAK/C,UAAU,MAAf,UACE,cAAC,EAAD,CAAQD,YAAY,IADtB,qBAGE,cAAC,EAAD,CAAWA,YAAU,QCIZiD,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.2e7a6009.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dashboardWrapper\":\"dashboard_dashboardWrapper__3Pna0\",\"tickerTimeChart\":\"dashboard_tickerTimeChart__9zn1q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__VKVL8\",\"headerWrapper\":\"header_headerWrapper__1tFhi\",\"headerList\":\"header_headerList__5W8ip\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectionWrapper\":\"selection_selectionWrapper__KmPrC\"};","import React from 'react';\r\nimport style from './dashboard.module.css'\r\n\r\nexport interface DashboardProps {\r\n  isSignedIn: boolean\r\n}\r\n\r\n\r\nexport const DashboardBody: React.FC<DashboardProps> = ({ isSignedIn }) => {\r\n  return (\r\n    <div className={style.dashboardWrapper}>\r\n      <div className={style.tickerTimeChart} >\r\n\r\n      </div>\r\n      <div className={style.tickerTimeChart} >\r\n\r\n      </div>\r\n      <div className={style.tickerTimeChart} >\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker\r\n} from '@material-ui/pickers';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\n\r\n\r\n\r\n\r\nimport style from './selection.module.css'\r\n\r\nexport interface SelectionProps {\r\n\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport const Selection: React.FC<SelectionProps> = (props) => {\r\n  const [selectedDate, setSelectedDate] = React.useState(new Date('2014-08-18T21:11:54'));\r\n  const [ticker, setTicker] = React.useState('');\r\n\r\n  const handleDateChange = (date: any) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const handleChange = (event: any) => {\r\n    setTicker(event.target.value);\r\n  };\r\n  return (\r\n    <div className={style.selectionWrapper}>\r\n\r\n      <FormControl className={useStyles().formControl}>\r\n        <InputLabel id=\"selectTickerLabel\">Ticker</InputLabel>\r\n        <Select\r\n\r\n          labelId=\"selectTickerLabel\"\r\n          id=\"selectTicker\"\r\n          value={ticker}\r\n          onChange={handleChange}\r\n        >\r\n          <MenuItem value={1}>Ticker1</MenuItem>\r\n          <MenuItem value={2}>Ticker2</MenuItem>\r\n          <MenuItem value={3}>Ticker3</MenuItem>\r\n        </Select>\r\n      </FormControl >\r\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n        <KeyboardDatePicker\r\n          disableToolbar\r\n          variant=\"inline\"\r\n          format=\"MM/dd/yyyy\"\r\n          margin=\"normal\"\r\n          id=\"date-picker-inline\"\r\n          label=\"Date from\"\r\n          value={selectedDate}\r\n          onChange={handleDateChange}\r\n          KeyboardButtonProps={{\r\n            'aria-label': 'change date',\r\n          }}\r\n        />\r\n      </MuiPickersUtilsProvider>\r\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n\r\n        <KeyboardDatePicker\r\n          disableToolbar\r\n          variant=\"inline\"\r\n          format=\"MM/dd/yyyy\"\r\n          margin=\"normal\"\r\n          id=\"date-picker-inline\"\r\n          label=\"Date to\"\r\n          value={selectedDate}\r\n          onChange={handleDateChange}\r\n          KeyboardButtonProps={{\r\n            'aria-label': 'change date',\r\n          }}\r\n        />\r\n      </MuiPickersUtilsProvider>\r\n    </div >\r\n  )\r\n}","import { DashboardBody, DashboardProps } from './dashboard'\r\nimport { Selection } from './selection'\r\n\r\n\r\n\r\nexport const Dashboard: React.FC<DashboardProps> = (props) => {\r\n  return (\r\n    <>\r\n      <Selection />\r\n      < DashboardBody isSignedIn />\r\n    </>\r\n  )\r\n}","import React from 'react';\r\nimport style from './header.module.css'\r\n\r\nexport interface HeaderProps {\r\n  isSignedIn: boolean\r\n}\r\n\r\n\r\nexport const Header: React.FC<HeaderProps> = ({ isSignedIn }) => {\r\n  return (\r\n    <header className={style.header}>\r\n      <div className={style.headerWrapper}>\r\n        <div className=\"header-logo\">Logo</div>\r\n        <nav >\r\n          <ul className={style.headerList}>\r\n            <li>Item 1</li>\r\n            <li>Item 2</li>\r\n            <li>Item 3</li>\r\n          </ul>\r\n        </nav>\r\n        <div>{isSignedIn ? 'Sign Out' : \"Sign In\"}</div>\r\n      </div>\r\n    </header>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport './App.css';\r\nimport { Dashboard } from './components/dashboard';\r\nimport { Header } from './components/header'\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Header isSignedIn={true} />\r\n      Yet another friday\r\n      <Dashboard isSignedIn />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}